(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{159:function(e,t,n){"use strict";var a=n(6),o=n.n(a),r=n(24),s=n.n(r),i=n(7),c=n.n(i),l=n(160),b=n.n(l),p=function(e){var t=e.children,n=e.href,a=e.className,o=c()(t,2),r=o[0],s=o[1],i=n?React.createElement("a",{href:n,target:"_blank"},r):r;return React.createElement("figure",{className:"".concat(a," ").concat(b.a.figure)},i,React.createElement("figcaption",null,React.createElement("span",{className:b.a.arrow},"â–²"),React.createElement("span",null,s)))};p.Video=function(e){var t=e.children,n=e.href,a=e.src,r=s()(e,["children","href","src"]);return React.createElement(p,o()({href:n||a},r),React.createElement("video",{muted:!0,autoPlay:!0,playsInline:!0,loop:!0},React.createElement("source",{src:a,type:"video/mp4"})),t)},p.Image=function(e){var t=e.children,n=e.href,a=e.src,r=e.alt,i=s()(e,["children","href","src","alt"]);return React.createElement(p,o()({href:n||a},i),React.createElement("img",{src:a,alt:r}),t)},t.a=p},160:function(e,t,n){e.exports={figure:"styles-figure_23Vi",arrow:"styles-arrow_2C7-"}},166:function(e,t,n){"use strict";var a=n(19),o=n.n(a),r=n(7),s=n.n(r),i=n(167),c=n.n(i);function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}t.a=function(e){var t=e.src,n=e.autoScale,a=void 0===n||n,r=useState(0),i=s()(r,2),b=i[0],p=i[1],d=useState(1),m=s()(d,2),h=m[0],u=m[1],f=useState(!0),O=s()(f,2),j=O[0],g=O[1],y=useState(null),w=s()(y,2),v=w[0],x=w[1],N=useRef(),T=useRef(),R=useDebounce((function(){!function(){var e=T.current;if(e){var t=e.contentWindow.document.body;t&&p(t.scrollHeight)}}(),function(){var e=N.current;if(e&&a){var t=e.getBoundingClientRect().width;u(t/560)}}()}),40);useEffect((function(){return x(t)}),[t]),useEffect(R,[j]),useDelays(R,[200,500,1e3],[j]),useResize(R);var I=j?{}:{opacity:1,transition:"opacity 0.5s"},k={height:j?null:"".concat(b*h,"px")},A=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({height:"".concat(b,"px"),transform:"scale(".concat(h,")")},I);return React.createElement("div",{ref:N,className:c.a.frame,style:k},React.createElement("iframe",{ref:T,src:v,onLoad:function(){return g(!1)},style:A,scrolling:"no"}),j&&React.createElement("div",{className:c.a.loading}))}},167:function(e,t,n){e.exports={frame:"styles-frame_2QDX",loading:"styles-loading_2WpJ",fade:"styles-fade_1KOA"}},174:function(e,t,n){"use strict";n.r(t),t.default="<main>\n  <article>\n    <p>The article's first paragraph.</p>\n    <aside>A comment on the above.</aside>\n    <p>The article's second paragraph.</p>\n  </article>\n</main>"},175:function(e,t,n){"use strict";n.r(t),t.default="main {\n  max-width: 50%;         // Article width\n  padding-right: 50%;     // Sidebar width\n  background: #eee;       // Sidebar color\n  position: relative;\n\n  article {\n    padding: 1rem;\n    background: white;\n  }\n\n  aside {\n    position: absolute;\n    right: 1rem;\n    width: calc(50% - 2rem);\n  }\n}"},176:function(e,t,n){"use strict";n.r(t),t.default="### Breaking the fourth wall\n\nAs I write this article, Iâ€™m using this component a lot!\nLetâ€™s peek at <span ref={r=createRef()}>the code</span>:\n\n<Aside target={r}>\nWell this is unexpected. {/* Waves to self. ðŸ‘‹ */}\n</Aside>"},177:function(e,t,n){"use strict";n.r(t),t.default="<span ref={r = createRef()} />\n\n<Aside target={r} moveDown={70}>\nThis aside is moved down 70 pixels.\n</Aside>"},76:function(e,t,n){"use strict";n.r(t),n.d(t,"r",(function(){return a})),n.d(t,"r2",(function(){return o})),n.d(t,"title",(function(){return j})),n.d(t,"path",(function(){return g})),n.d(t,"type",(function(){return y})),n.d(t,"description",(function(){return w})),n.d(t,"keywords",(function(){return v})),n.d(t,"image",(function(){return x})),n.d(t,"video",(function(){return N})),n.d(t,"date",(function(){return T})),n.d(t,"default",(function(){return I}));var a,o,r=n(6),s=n.n(r),i=n(24),c=n.n(i),l=(n(0),n(25)),b=n(161),p=n(162),d=n(163),m=n(67),h=n(164),u=n(165),f=n(159),O=n(166),j="Building a commentary sidebar in React",g="/blog/react-commentary-sidebar",y="article",w="How I built one of my favourite features: a commentary sidebar, written in React.",v="Chris Patuzzo,React,commentary,sidebar,aside,hooks,CSS,positioning",x={path:"/images/commentary-sidebar.gif",width:600,height:478,bytes:904040,type:"image/gif"},N={path:"/videos/commentary-sidebar.mp4",width:1120,height:892,bytes:531454,type:"video/mp4"},T="2019-10-30T12:00Z",R={r:a,title:j};function I(e){var t=e.components,r=c()(e,["components"]);return Object(l.b)("wrapper",s()({},R,r,{components:t,mdxType:"MDXLayout"}),Object(l.b)(d.a,s()({title:j,path:g,type:y,description:w,keywords:v,image:x,video:N},{mdxType:"MetaTags"})),Object(l.b)(m.a,{previous:b.palindromicSuperpermutations,next:b.reactCommentarySidebar2,mdxType:"NavBar"}),Object(l.b)("title",null,j),Object(l.b)("h1",null,j),Object(l.b)("time",{dateTime:T},"Published ",Object(p.a)(T)," by "," ",Object(l.b)("a",{href:"https://twitter.com/chrispatuzzo"},"Chris Patuzzo"),Object(l.b)(h.a,{mdxType:"FeedIcon"})),Object(l.b)("div",{className:"note"},"This is the first of two parts. Part two is ",Object(l.b)("a",{href:"/blog/react-commentary-sidebar-2"},"here"),"."),Object(l.b)("span",{ref:a=createRef()}),Object(l.b)("span",{ref:o=createRef()}),Object(l.b)(f.a.Video,{src:"/videos/commentary-sidebar.mp4",className:"more_space"},"The sidebar is responsive and collapses inline on smaller screens"),Object(l.b)(u.a,{target:a,moveDown:130,mdxType:"Aside"},Object(l.b)("p",null,"This is taken from my recent article on ",Object(l.b)("a",s()({parentName:"p"},{href:"/blog/how-bash-completion-works"}),"How bash completion\nworks"),".")),Object(l.b)(u.a,{target:a,moveDown:315,mdxType:"Aside"},Object(l.b)("p",null,"Iâ€™m going to break the fourth wall a lot in this article. Uh oh...")),Object(l.b)("p",null,"Over the past weeks, Iâ€™ve been building this blog and writing articles for it.\nIâ€™ve spent a lot of time thinking about the reader. Who are they? Why are they\nhere? Itâ€™s often hard to know how much detail to go into and how much background\nknowledge to assume."),Object(l.b)("p",null,"On the one hand, people are busy. Attentions are short and time is precious. Iâ€™d\ndo well to keep articles lean, focussed and to the point. But that ",Object(l.b)("em",{parentName:"p"},"misses")," the\npoint. People are here for enjoyment and just presenting the cold hard facts\nisnâ€™t going to cut it."),Object(l.b)("p",null,"Iâ€™ve settled on an approach I hope will cater to a variety of readers. I keep\nthe main body of content concise and ",Object(l.b)("em",{parentName:"p"},"on topic")," but enrich it with commentary on\nthe side. This leaves room for elaboration, tangential remarks and all the\nwhimsy I can ",Object(l.b)("span",{ref:a=createRef()},"mustard"),"."),Object(l.b)(u.a,{target:a,mdxType:"Aside"},Object(l.b)("p",null,"Iâ€™m so sorry.")),Object(l.b)("p",null,"However, this commentary hides complexity. When ",Object(l.b)("span",{ref:a=createRef()},"viewed")," on a large-enough screen, itâ€™s presented in a\nsidebar next to the main content. Ideally, comments sit as close as possible to\nthe word or phrase they refer to. This helps flow and improves continuity."),Object(l.b)(u.a,{target:a,mdxType:"Aside"},Object(l.b)("p",null,"When viewed on mobile, comments are presented inside the main content but with softer styles to show theyâ€™re supplementary.")),Object(l.b)("p",null,"In this article, Iâ€™ll explain the mechanics of how this works in my React app.\nAs youâ€™ll see, thereâ€™s a lot to consider to make a robust, responsive and\nsemantic ",Object(l.b)("span",{ref:a=createRef()},"solution"),"."),Object(l.b)(u.a,{target:a,mdxType:"Aside"},Object(l.b)("p",null,"... thatâ€™s SEO and print friendly.")),Object(l.b)("h2",null,"Structuring the DOM"),Object(l.b)("p",null,"Putting React to one side for a moment, letâ€™s first consider how to structure\nthe DOM.  HTML5 has the perfect element for our needs:"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"The HTML ",Object(l.b)("inlineCode",{parentName:"p"},"<aside>")," element represents a portion of a document whose content is\nonly indirectly related to the documentâ€™s main content. Asides are frequently\npresented as sidebars or call-out boxes.\n","Â ",Object(l.b)("em",{parentName:"p"},"â€“ ",Object(l.b)("a",s()({parentName:"em"},{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside"}),"MDN web docs")))),Object(l.b)("p",null,"That leaves the question of whether to group all commentary together into ",Object(l.b)("span",{ref:a=createRef()},"a")," single ",Object(l.b)("inlineCode",{parentName:"p"},"<aside>")," or to have one per comment. I\ndecided on the latter as I think this is more meaningful. Comments are\nindependent of each other so the DOM should reflect that."),Object(l.b)(u.a,{target:a,mdxType:"Aside"},Object(l.b)("p",null,"Itâ€™s also easier to intersperse comments with content using this approach which is useful for mobile.")),Object(l.b)("p",null,"Hereâ€™s how that looks in code:"),Object(l.b)(f.a,{mdxType:"Figure"},Object(l.b)("pre",null,Object(l.b)("code",{className:"language-html"},n(174).default)),Object(l.b)("p",null,"Comments interspersed with content")),Object(l.b)("p",null,"This ",Object(l.b)("em",{parentName:"p"},"should")," be friendlier to search engines, too. Related content is closer\ntogether."),Object(l.b)("h3",null,"Laying things out"),Object(l.b)("p",null,"As you can see above, thereâ€™s no DOM element for the sidebar. I think of a\nsidebar as a way to present ",Object(l.b)("inlineCode",{parentName:"p"},"<aside>")," elements. It really ought to be a\npresentational concern."),Object(l.b)("p",null,"There are a number of CSS techniques we could use to create a sidebar. Thereâ€™s\nflexbox, floats, relative and absolute positioning. This seemed simplest to\nme:"),Object(l.b)("span",{ref:a=createRef()}),Object(l.b)(f.a,{mdxType:"Figure"},Object(l.b)("pre",null,Object(l.b)("code",{className:"language-css"},n(175).default)),Object(l.b)("p",null,"One way of creating a sidebar with ",Object(l.b)("span",{ref:o=createRef()},"CSS"))),Object(l.b)(u.a,{target:o,mdxType:"Aside"},Object(l.b)("p",null,"  Technically itâ€™s ",Object(l.b)("a",s()({parentName:"p"},{href:"https://sass-lang.com/"}),"Sass")," as it uses nested rules.")),Object(l.b)(u.a,{target:a,moveDown:28,mdxType:"Aside"},Object(l.b)("p",null,"Iâ€™ve simplified this a bit. I also have rules to set colors, borders, etc - and some media queries to change the presentation for smaller screens.")),Object(l.b)("p",null,"This works by splitting the container in two. The sidebar comments live in the\nspace created by the ",Object(l.b)("inlineCode",{parentName:"p"},"padding-right")," rule. They use absolute positioning which\nremoves them from the documentâ€™s flow and ",Object(l.b)("inlineCode",{parentName:"p"},"right: 1rem")," to place them in the\npadded region."),Object(l.b)("p",null,"We can left-position the ",Object(l.b)("inlineCode",{parentName:"p"},"<aside>")," elements within the sidebar by setting their\nwidth. This is calculated as ",Object(l.b)("inlineCode",{parentName:"p"},"50% - 2rem")," to create the illusion of\npadding - by leaving an equal amount of space on the left and right. Hereâ€™s how\nit looks:"),Object(l.b)("span",{ref:a=createRef()}),Object(l.b)(f.a,{mdxType:"Figure"},Object(l.b)(O.a,{src:"/examples/sidebar-1/example.html",autoScale:!1,mdxType:"Frame"}),Object(l.b)("p",null,"Using padding to create a sidebar on the right")),Object(l.b)(u.a,{target:a,moveDown:25,mdxType:"Aside"},Object(l.b)("p",null,"This is a live version of the code running in a frame. You can see a standalone version ",Object(l.b)("a",{href:"/examples/sidebar-1/example.html",target:"_blank"},"here"),".")),Object(l.b)("p",null,"This isnâ€™t quite right because the comment is placed next to the second\nparagraph instead of the first. We could fix it by moving the ",Object(l.b)("inlineCode",{parentName:"p"},"<aside>")," above\nthe first paragraph but then the DOM would be out of order and wouldnâ€™t read\ncorrectly on mobile."),Object(l.b)("h3",null,"Further complications"),Object(l.b)("p",null,"To make matters worse, we also want to be able to position commentary next to\nspecific words or phrases. For example:"),Object(l.b)(f.a,{mdxType:"Figure"},Object(l.b)(O.a,{src:"/examples/sidebar-2/example.html",autoScale:!1,mdxType:"Frame"}),Object(l.b)("p",null,"A ",Object(l.b)("span",{ref:a=createRef()},"badly-placed")," comment that",Object(l.b)("span",{style:{position:"relative",top:"2px",left:"4px"}},"doesnâ€™t line up"))),Object(l.b)(u.a,{target:a,moveDown:-44,mdxType:"Aside"},Object(l.b)("p",null,"Yes, red definitely c",Object(l.b)("span",{style:{color:"#663922"}},"l"),Object(l.b)("span",{style:{color:"#773933"}},"a"),Object(l.b)("span",{style:{color:"#883944"}},"s"),Object(l.b)("span",{style:{color:"#993955"}},"h"),Object(l.b)("span",{style:{color:"#aa3955"}},"e"),Object(l.b)("span",{style:{color:"#bb3955"}},"s"),".")),Object(l.b)("p",null,"We can use absolute positioning for this but itâ€™s not so straightforward. The\nparagraph is free-flowing text which means itâ€™s hard to predict where the words\nwill be. It depends on the width of the browser, which font is loaded and its\nline height."),Object(l.b)("p",null,"We could change the DOM and move the ",Object(l.b)("inlineCode",{parentName:"p"},"<aside>")," into the text element but again,\nthat would mean the contentâ€™s out of order. Weâ€™d end up with a horrible jumble:"),Object(l.b)("pre",null,Object(l.b)("code",s()({parentName:"pre"},{className:"language-html"}),"<p>In this paragraph, I want to comment on\n<span>\n  <em>these words</em>\n  <aside>Does red clash with the theme?</aside>\n</span>\nwhich are in the middle of the paragraph.</p>\n")),Object(l.b)("p",null,"Itâ€™s also not good practice to do this. React gives us a warning:"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"validateDOMNesting(...): ",Object(l.b)("inlineCode",{parentName:"p"},"<aside>")," cannot appear as a descendant of ",Object(l.b)("inlineCode",{parentName:"p"},"<p>"),".")),Object(l.b)("p",null,"The ",Object(l.b)("span",{ref:a=createRef()},"fundamental")," problem is thereâ€™s no way in CSS to position elements relative\nto arbitrary things. It would be neat if we could do something like this, but\nwe canâ€™t:"),Object(l.b)(u.a,{target:a,mdxType:"Aside"},Object(l.b)("p",null,"Relative positioning looks at ancestors, not siblings.")),Object(l.b)("span",{ref:a=createRef()}),Object(l.b)("pre",null,Object(l.b)("code",s()({parentName:"pre"},{className:"language-css"}),"aside {\n  position: element(#thing);\n  top: 0;\n}\n")),Object(l.b)(u.a,{target:a,moveDown:32,mdxType:"Aside"},Object(l.b)("p",null,"This hypothetical syntax is based on ",Object(l.b)("a",s()({parentName:"p"},{href:"https://discourse.wicg.io/t/position-an-element-relatively-to-another-element-from-anywhere-in-the-dom/968"}),"this blog\npost"),"\non the same topic.")),Object(l.b)("p",null,"I spent a while thinking of other ways to do this in CSS. Flexboxâ€™s ",Object(l.b)("inlineCode",{parentName:"p"},"order"),"\nproperty is interesting because it allows for a difference in how the DOM is\nstructured to how elements are presented. Ultimately, I couldnâ€™t find a way and\nresorted to ",Object(l.b)("span",{ref:a=createRef()},"JavaScript"),"."),Object(l.b)(u.a,{target:a,mdxType:"Aside"},Object(l.b)("p",null,"Disappointing, I know. If you can think of a way, please\n",Object(l.b)("a",s()({parentName:"p"},{href:"https://twitter.com/chrispatuzzo"}),"get in touch"),"!")),Object(l.b)("h2",null,"React"),Object(l.b)("p",null,"In React, I created an ",Object(l.b)("inlineCode",{parentName:"p"},"<Aside>")," component that positions itself relative to\na target element. It encapsulates the behavior of figuring our what its\nposition should be and listens to events that might invalidate that, such as\nresizing the window."),Object(l.b)("p",null,"Hereâ€™s a first version:"),Object(l.b)("span",{ref:a=createRef()}),Object(l.b)("span",{ref:o=createRef()}),Object(l.b)(f.a,{mdxType:"Figure"},Object(l.b)("pre",null,Object(l.b)("code",s()({parentName:"pre"},{className:"language-javascript"}),'const Aside = ({ target, children }) => {\n  const [style, setStyle] = useState(null);\n\n  const align = () => {\n    const rectangle = target.current.getBoundingClientRect();\n    const offset = window.scrollY + rectangle.top;\n\n    setStyle({ top: offset });\n  };\n\n  useEffect(() => {\n    align(); // Align when the component is mounted.\n\n    const listener = window.addEventListener("resize", align);\n    return () => window.removeEventListener("resize", listener);\n  }, []);\n\n  return (\n    <aside className={css.aside} style={style}>\n      {children}\n    </aside>\n  );\n};\n\nexport default Aside;\n')),Object(l.b)("p",null,"A React component that aligns itself with a target")),Object(l.b)("p",null,"There are really two main parts to it:"),Object(l.b)("div",{className:"more_space"},Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"align")," function calculates the y-coordinate of the ",Object(l.b)("inlineCode",{parentName:"li"},"target")," which is a\n",Object(l.b)("a",s()({parentName:"li"},{href:"https://reactjs.org/docs/refs-and-the-dom.html"}),"reference")," to a DOM\nelement. It sets the ",Object(l.b)("inlineCode",{parentName:"li"},"top")," style property to this."),Object(l.b)("li",{parentName:"ol"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"useEffect")," hook aligns the component when itâ€™s first mounted and binds\na listener to re-align the component if the browser is resized."))),Object(l.b)(u.a,{target:a,moveDown:92,mdxType:"Aside"},Object(l.b)("p",null,Object(l.b)("a",s()({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"}),"getBoundingClientRect"),"\nis ",Object(l.b)("a",s()({parentName:"p"},{href:"https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup"}),"well-supported"),"\nin modern browsers. Itâ€™s better than ",Object(l.b)("inlineCode",{parentName:"p"},"offsetTop")," because it factors in CSS transformations.")),Object(l.b)(u.a,{target:o,moveDown:365,mdxType:"Aside"},Object(l.b)("p",null,"The function returned from\n",Object(l.b)("a",s()({parentName:"p"},{href:"https://reactjs.org/docs/hooks-effect.html"}),Object(l.b)("inlineCode",{parentName:"a"},"useEffect"))," is called when the\ncomponent is unmounted. Itâ€™s used to\n",Object(l.b)("a",s()({parentName:"p"},{href:"https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup"}),"clean up"),"\nand remove the listener.")),Object(l.b)("p",null,"Hereâ€™s how it looks for a real example. Notice the comments move around\nin the sidebar, repositioning themselves next to their target content."),Object(l.b)("span",{ref:a=createRef()}),Object(l.b)(f.a.Video,{src:"/videos/commentary-realignment.mp4",className:"more_space"},"Re-aligning comments while resizing the browser"),Object(l.b)(u.a,{target:a,moveDown:160,mdxType:"Aside"},Object(l.b)("p",null,"This is taken from my recent article on ",Object(l.b)("a",s()({parentName:"p"},{href:"/blog/palindromic-superpermutations"}),"palindromic superpermutations"),".")),Object(l.b)("p",null,"To use the ",Object(l.b)("inlineCode",{parentName:"p"},"<Aside>")," component, I create a ref to the target content then pass\nthat in:"),Object(l.b)("span",{ref:a=createRef()}),Object(l.b)("span",{ref:o=createRef()}),Object(l.b)(f.a,{mdxType:"Figure"},Object(l.b)("pre",null,Object(l.b)("code",s()({parentName:"pre"},{className:"language-jsx"}),"<p>In this paragraph, I want to comment on\n\n<em ref={r=createRef()}>\n  these words\n</em>\n\nwhich are in the middle of the paragraph.</p>\n\n<Aside target={r}>\n  Does red clash with the theme?\n</Aside>\n")),Object(l.b)("p",null,"How to use the ",Object(l.b)("inlineCode",{parentName:"p"},"<Aside>")," component")),Object(l.b)(u.a,{target:a,moveDown:50,mdxType:"Aside"},Object(l.b)("p",null,"Iâ€™ve already ",Object(l.b)("inlineCode",{parentName:"p"},"let r")," by this point. This is re-assigned to\n",Object(l.b)("a",s()({parentName:"p"},{href:"https://reactjs.org/docs/refs-and-the-dom.html#creating-refs"}),Object(l.b)("inlineCode",{parentName:"a"},"createRef()")),"\nfor each new reference.")),Object(l.b)(u.a,{target:o,moveDown:178,mdxType:"Aside"},Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"r")," is passed as the target.")),Object(l.b)("h3",null,"Breaking the fourth wall"),Object(l.b)("p",null,"As I write this article, Iâ€™m using this component a lot!\nLetâ€™s peek at ",Object(l.b)("span",{ref:a=createRef()},"the code"),":"),Object(l.b)(u.a,{target:a,mdxType:"Aside"},"Well this is unexpected. "),Object(l.b)("span",{ref:a=createRef()}),Object(l.b)(f.a,{mdxType:"Figure"},Object(l.b)("pre",null,Object(l.b)("code",{className:"language-jsx"},n(176).default)),Object(l.b)("p",null,"Using the ",Object(l.b)("inlineCode",{parentName:"p"},"<Aside>")," component in ",Object(l.b)("strong",{parentName:"p"},"this")," article")),Object(l.b)(u.a,{target:a,moveDown:50,mdxType:"Aside"},Object(l.b)("p",null,"Iâ€™m using a hybrid of Markdown that supports JSX. Itâ€™s called\n",Object(l.b)("a",s()({parentName:"p"},{href:"https://github.com/mdx-js/mdx"}),"MDX"),".")),Object(l.b)("p",null,"If your browser is wide enough, you ",Object(l.b)("em",{parentName:"p"},"should")," see â€˜Well this is unexpectedâ€™ on\nthe right-hand side of â€˜the codeâ€™. Otherwise, itâ€™ll appear in the main flow."),Object(l.b)("p",null,"In some cases, thereâ€™s no word or phrase in the DOM to refer to. This is the\ncase with images, videos and code blocks that use the ",Object(l.b)("a",s()({parentName:"p"},{href:"https://www.w3schools.com/tags/tag_pre.asp"}),Object(l.b)("inlineCode",{parentName:"a"},"<pre>"),"\ntag"),". ",Object(l.b)("span",{ref:o=createRef()},"For")," these cases, I built an ",Object(l.b)("em",{parentName:"p"},"escape hatch")," that lets me\nmove comments down by a fixed amount:"),Object(l.b)("span",{ref:a=createRef()}),Object(l.b)(u.a,{target:a,moveDown:70,mdxType:"Aside"},"This aside is moved down 70 pixels."),Object(l.b)("pre",null,Object(l.b)("code",{className:"language-jsx"},n(177).default)),Object(l.b)(u.a,{target:o,mdxType:"Aside"},Object(l.b)("p",null,"These elements tend to have a fixed height, anyway.")),Object(l.b)("p",null,"This amount is then added to the ",Object(l.b)("inlineCode",{parentName:"p"},"offset"),":"),Object(l.b)(f.a,{mdxType:"Figure"},Object(l.b)("pre",null,Object(l.b)("code",s()({parentName:"pre"},{className:"language-javascript"}),"const Aside = ({ target, children, moveDown = 0 }) => {\n  // ...\n\n  const align = () => {\n    // ...\n    const offset = window.scrollY + rectangle.top + moveDown;\n    setStyle({ top: offset });\n  };\n\n  // ...\n};\n")),Object(l.b)("p",null,"Moving comments down by a fixed amount")),Object(l.b)("p",null,"All ",Object(l.b)("span",{ref:a=createRef()},"told"),", this serves very well as a means of commenting on variety of things:\ntext, images, code and (as weâ€™ve seen) even comments themselves!"),Object(l.b)(u.a,{target:a,mdxType:"Aside"},Object(l.b)("p",null,"Or comments about",Object(l.b)("span",{style:{opacity:.8}}," comments"),Object(l.b)("span",{style:{opacity:.7}}," about"),Object(l.b)("span",{style:{opacity:.6}}," comments"),Object(l.b)("span",{style:{opacity:.5}}," about"),Object(l.b)("span",{style:{opacity:.4}}," comments"),Object(l.b)("span",{style:{opacity:.3}}," about"),Object(l.b)("span",{style:{opacity:.2}}," comments"),Object(l.b)("span",{style:{opacity:.1}}," about"),Object(l.b)("span",{style:{opacity:0}}," secrets"))),Object(l.b)("h3",null,"Incremental improvements"),Object(l.b)("p",null,"In part two of this article weâ€™ll be refine our component in a number of ways:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Weâ€™ll cope with slow-loading images and fonts"),Object(l.b)("li",{parentName:"ul"},"Weâ€™ll handle a race condition with React refs"),Object(l.b)("li",{parentName:"ul"},"Weâ€™ll add debouncing, for a smoother browser experience"),Object(l.b)("li",{parentName:"ul"},"Weâ€™ll extract code into hooks to make things tidy"),Object(l.b)("li",{parentName:"ul"},"Weâ€™ll stare into the face of evil, aka. print layouts")),Object(l.b)("p",null,"Sounds exciting!? I think so... See you in ",Object(l.b)("a",s()({parentName:"p"},{href:"/blog/react-commentary-sidebar-2"}),"part two"),"."),Object(l.b)(m.a,{previous:b.palindromicSuperpermutations,next:b.reactCommentarySidebar2,mdxType:"NavBar"}))}I.isMDXComponent=!0}}]);